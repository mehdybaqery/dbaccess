#!/bin/bash

# Define colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Check if the MySQL credentials file exists
CREDENTIALS_FILE="/path/to/secure/.my.cnf/.p"
if [ ! -f "$CREDENTIALS_FILE" ]; then
    echo -e "${RED}Credentials file not found. Exiting.${NC}"
    exit 1
fi

# Prompt user to select a database
echo -e "${CYAN}Which database do you want to use?${NC}"
echo -e "${YELLOW}1. db1${NC}"
echo -e "${YELLOW}2. db2${NC}"
read -p "Enter the number corresponding to your choice: " choice

# Determine the selected database
case $choice in
    1)
        DATABASE="db1"
        ;;
    2)
        DATABASE="db2"
        ;;
    *)
        echo -e "${RED}Invalid choice. Exiting.${NC}"
        exit 1
        ;;
esac

echo -e "${GREEN}You selected database: $DATABASE${NC}"

# Display all tables in the selected database
echo -e "${CYAN}Listing all tables in $DATABASE:${NC}"
mysql --defaults-extra-file="$CREDENTIALS_FILE" -D "$DATABASE" -e "SHOW TABLES;"
if [ $? -ne 0 ]; then
    echo -e "${RED}Failed to retrieve tables. Exiting.${NC}"
    exit 1
fi

# Continuously prompt user for SQL queries
while true; do
    echo -e "${CYAN}Enter the SQL query to run on $DATABASE (or type 'exit' to quit):${NC}"
    read -p "SQL Query: " SQL_QUERY

    if [[ "$SQL_QUERY" == "exit" ]]; then
        echo -e "${BLUE}Exiting the script. Goodbye!${NC}"
        break
    fi

    # Execute the query on the selected database
    mysql --defaults-extra-file="$CREDENTIALS_FILE" -D "$DATABASE" -e "$SQL_QUERY"

    # Check the result of the query execution
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}Query executed successfully.${NC}"
    else
        echo -e "${RED}Failed to execute the query.${NC}"
    fi

done
